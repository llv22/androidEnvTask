# Copyright 2022 DeepMind Technologies Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# proto-file: android_env/proto/task.proto
# proto-message: android_env.Task

id: "sgtpuzzles_guess_standard"
name: "Simon Tatham's puzzle - Guess - Standard"
description: "You have a set of coloured pegs, and have to reproduce a predetermined sequence of them (chosen by the computer) within a certain number of guesses."

setup_steps: [
  {
    adb_request: {
      install_apk: {
        filesystem: {
          path: "2020.07.08-sgtpuzzles-debug.apk"
        }
      }
    }
    success_condition: {
      check_install: {
        package_name: "name.boyle.chris.sgtpuzzles"
        timeout_sec: 10.0
      }
    }
  },
  {  # Put the device in portrait mode.
    adb_request: {
      settings: {
        name_space: SYSTEM
        put: { key: "user_rotation" value: "0" }
      }
    }
  }
]

reset_steps: [
  { adb_request: { force_stop: { package_name: "name.boyle.chris.sgtpuzzles" } } },
  { adb_request: { package_manager: { clear: { package_name: "name.boyle.chris.sgtpuzzles" } } } },
  {
    adb_request: {
      start_activity: {
        force_stop: true
        full_activity: "name.boyle.chris.sgtpuzzles/.SGTPuzzles"
        extra_args: [
            "--ez", '"RL_TASK_ENABLED"', '"true"',
            # params: c{number of colors 2-10}p{number of pegs > 1}g{number of tries > 0}{'b' to allow OR 'B' to dissallow blanks}{'m' to allow OR 'M' to disallow duplicates}
            "--es", '"RL_TASK_GAME_CONFIG"', '"{\\"gameId\\":\\"guess\\",\\"params\\":\\"c6p4g10Bm\\"}"'
        ]
      }
    }
    success_condition: {
      wait_for_app_screen: {
        app_screen: {
          activity: "name.boyle.chris.sgtpuzzles/name.boyle.chris.sgtpuzzles.GamePlay"
          view_hierarchy_path: [
          ]
        }
        timeout_sec: 10.0
      }
      num_retries: 10
    }
  },
  {
    adb_request: {
      start_screen_pinning: {
        full_activity: "name.boyle.chris.sgtpuzzles/name.boyle.chris.sgtpuzzles.GamePlay"
      }
    }
  }
]

expected_app_screen: {
  activity: "name.boyle.chris.sgtpuzzles/name.boyle.chris.sgtpuzzles.GamePlay"
  view_hierarchy_path: [
  ]
}

max_episode_sec: 7200  # Prevent infinite episodes.

log_parsing_config: {

  filters: ["AndroidRLTask:V"]

  log_regexps: {
    score: "^[Ss]core: ([-+]?[0-9]*\\.?[0-9]*)$"
    reward: "^[Rr]eward: ([-+]?[0-9]*\\.?[0-9]*)$"
    episode_end: "^episode[ _]end$"
    extra: "^extra: (?P<name>[^ ]*)[ ]?(?P<extra>.*)$"
    json_extra: "^json_extra: (?P<json_extra>.*)$"
  }
}

extras_spec: [
  # All of these a returned when a row of pegs are validated
  # Set of pegs colors int [1-10] validated e.g. [1, 2, 3, 4]
  { name: "peg" shape: [4], dtype: INT32 },
  # Feedback (0 = incorrect,1 = correct place, 2 = correct color) of validated pegs e.g. [2, 1, 0, 0]
  { name: "feedback" shape: [4], dtype: INT32 }
]

